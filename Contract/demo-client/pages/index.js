import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Web3 from 'web3'
import Web3Modal from 'web3modal'
import DeathKingdomCoin from '../../client/contracts/DeathKingdomCoin.json'
import TankNFT from '../../client/contracts/TankNFT.json'
import Marketplace from '../../client/contracts/Marketplace.json'
import BigNumber from 'big-number'
import { useEffect, useState } from 'react';

export default function Home() {
  var web3;
  var networkId;
  var accounts;
  var deathKingdomCoinContract;
  var tankNFTContract;
  var marketplaceContract;

  async function setWeb3Value() {
    const web3Modal = new Web3Modal()
    const provider = await web3Modal.connect()

    web3 = new Web3(provider)

    // web3 = new Web3('HTTP://127.0.0.1:7545');

    networkId = await web3.eth.net.getId()
    accounts = await web3.eth.getAccounts();
    deathKingdomCoinContract = new web3.eth.Contract(DeathKingdomCoin.abi, DeathKingdomCoin.networks[networkId].address);
    tankNFTContract = new web3.eth.Contract(TankNFT.abi, TankNFT.networks[networkId].address);
    marketplaceContract = new web3.eth.Contract(Marketplace.abi, Marketplace.networks[networkId].address);
  }

  setWeb3Value();

  async function mintNFT() {
    await tankNFTContract.methods.createToken("tokenURI").send({ from: accounts[0] });
  }

  async function transferDKC(amount = 1) {
    await deathKingdomCoinContract.methods.transfer("0xeA805C24E8352A0197e24E47A60729EFe4484828", new BigNumber(amount * Math.pow(10, 18))).send({ from: accounts[0] });
    const a = await deathKingdomCoinContract.methods.balanceOf(accounts[0]).call();
    console.log(a);
  }

  async function sellNFT(price = 0.1) {
    await marketplaceContract.methods.listNft(TankNFT.networks[networkId].address, 1, new BigNumber(price * Math.pow(10, 18))).send({ from: accounts[0] });

    console.log(await marketplaceContract.methods.platformFee().call());

  }
  async function buyNFT() {
    await marketplaceContract.methods.buyNft(1).send({ from: accounts[0] });

    console.log(accounts[0]);
  }

  async function getListingNfts() {
    const listings = await marketplaceContract.methods.getListingNfts().call();
    console.log(listings);
  }


  async function getMyNfts() {
    const myNfts = await tankNFTContract.methods.getMyNfts(accounts[0]).call();
    console.log(myNfts);
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Marketplace</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <button type="button" onClick={() => mintNFT()}>MintNFT</button>
      <button type="button" onClick={() => sellNFT()}>SellNFT</button>
      <button type="button" onClick={() => buyNFT()}>BuyNFT</button>
      <button type="button" onClick={() => getMyNfts()}>getMyNfts</button>
      <button type="button" onClick={() => getListingNfts()}>getListingNfts</button>
      <br></br>

    </div>
  )
}
